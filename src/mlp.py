# Simple MLP implementation in PyTorch

import torch
import torch.nn as nn
import torch.nn.functional as F
import torch.optim as optim
import pandas as pd


class Mlp(nn.Module):
    def __init__(self, input_size, output_size, dropout=0.2):
        super(Mlp, self).__init__()
        n_dims_second_layer = input_size // 2
        self.flatten = nn.Flatten()
        self.model = nn.Sequential(
            nn.Linear(input_size, n_dims_second_layer),
            nn.ReLU(),
            nn.Dropout(dropout),
            nn.Linear(n_dims_second_layer, output_size),
            # nn.LogSoftmax(),
        )

    def forward(self, x):
        x = self.flatten(x)
        return self.model(x)
